{"version":3,"sources":["me-skin-field.js"],"names":["SkinField","options","field","$field","jQuery","ID","attr","name","type","prop","toLowerCase","disabled","$label","length","$customSkin","dependenciesExist","requirementsExist","debug","window","SETTINGS","DEBUG_MODE","setDOMAttr","setCustomVariables","removeCommonEvents","addCommonEvents","removeCustomEvents","addCustomEvents","setDefault","on","e","toggleHover","keyHandler","off","removeAttr","isValid","$","console","warn","error","toggleClass","_name","_type","_ID","_options","params","_disabled","bool"],"mappings":"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","file":"me-skin-field.js","sourcesContent":["/**\n * SkinMe: A library to simplify radio, checkbox, select customization\n *\n * Author: Samuel Cléroux-Bouthillier && Nicolas Lemoyne\n * http://www.quatrecentquatre.com\n *\n * Dual licensed under MIT and GNU General Public License version 3 (GPLv3)\n * http://www.opensource.org/licenses/LGPL-3.0\n * Version: 2.0.0\n * Release date: Feb 2020\n *\n * Methods:\n *  -\n *  -\n *  -\n *  -\n *  -\n *  -\n *  -\n *\n *  -\n *  -\n *  -\n *\n *\n *  TODO\n *  - Enable / disable field\n *  - Filtering\n *  - Search\n *  - Ajax search\n *\n *\n *  DONE - radio\n * \tDONE - checkbox\n *\tDONE - select\n *\n * \t<input type=\"range\">\n * \t<input type=\"color\">\n * \t<input type=\"date\">\n * \t<input type=\"datetime-local\">\n * \t<input type=\"email\">\n * \t<input type=\"file\">\n * \t<input type=\"hidden\">\n * \t<input type=\"image\">\n * \t<input type=\"month\">\n * \t<input type=\"number\">\n * \t<input type=\"password\">\n * \t<input type=\"reset\">\n * \t<input type=\"search\">\n * \t<input type=\"submit\">\n * \t<input type=\"tel\">\n * \t<input type=\"text\">\n * \t<input type=\"time\">\n * \t<input type=\"url\">\n * \t<input type=\"week\">\n */\n\n\nclass SkinField {\n\tconstructor(options){\n\t\tthis.field \t\t\t= options.field;\n\t\tthis.$field \t\t= jQuery(options.field);\n\n\t\tthis.ID \t\t\t= this.$field.attr('id');\n\t\tthis.name \t\t\t= this.$field.attr('name');\n\t\tthis.type \t\t\t= (this.$field.attr('type')) ? this.$field.attr('type') : this.$field.prop(\"tagName\").toLowerCase();\n\t\tthis.disabled \t\t= !!this.$field.attr('disabled');\n\n\t\tthis.$label \t\t= (jQuery('label[for=\"' + this.ID + '\"]').length > 0) ? jQuery('label[for=\"' + this.ID + '\"]') : null;\n\t\tthis.$customSkin \t= (jQuery(`[me\\\\:skin\\\\:id=\"${this.ID}\"]`).length > 0) ? jQuery(`[me\\\\:skin\\\\:id=\"${this.ID}\"]`) : null;\n\n\t\tif(!this.dependenciesExist() || !this.requirementsExist())\n\t\t\treturn;\n\n\t\tthis.options \t\t= {debug: (window.SETTINGS && SETTINGS.DEBUG_MODE) ? SETTINGS.DEBUG_MODE : false};\n\t}\n\n\tinitialize(){\n\t\t// Set common variables used by every field type\n\t\tthis.setDOMAttr();\n\t\tthis.setCustomVariables();\n\n\t\tif(!this.$customSkin)\n\t\t\treturn;\n\n\t\tthis.removeCommonEvents();\n\t\tthis.addCommonEvents();\n\n\t\t// Add specific variables depending of the field type\n\t\tthis.removeCustomEvents();\n\t\tthis.addCustomEvents();\n\n\t\tthis.setDefault();\n\t}\n\taddCommonEvents(){\n\t\tthis.$customSkin.on('mouseenter.skinMe mouseleave.skinMe', (e) => {this.toggleHover(e)});\n\t\tthis.$customSkin.on('keydown.skinMe',(e) => {this.keyHandler(e)});\n\t}\n\tremoveCommonEvents(){\n\t\tthis.$customSkin.off('mouseenter.skinMe mouseleave.skinMe');\n\t\tthis.$customSkin.off('keydown.skinMe');\n\t}\n\tsetDOMAttr(){\n\t\tthis.$field.attr('me:skin:render', \"true\");\n\t\tthis.$field.attr('me:skin:type', this.type);\n\t\tthis.$customSkin.attr('me:skin:render', \"true\");\n\t\tthis.$customSkin.attr('me:skin:disabled', this.disabled);\n\n\t\tthis.$customSkin.attr('me:skin:theme', this.$field.attr('me:skin:theme'));\n\t\tthis.$field.removeAttr('me:skin:theme');\n\n\t\tif(!this.disabled){\n\t\t\tthis.$customSkin.attr('tabindex', 0);\n\t\t}\n\t}\n\tdependenciesExist(){\n\t\tlet isValid = true;\n\n\t\tif (!window.$) {\n\t\t\tconsole.warn(`SkinMe :: Dependencies :: required jquery (http://jquery.com/)`);\n\t\t\tisValid = false;\n\t\t}\n\n\t\treturn isValid;\n\t}\n\n\trequirementsExist(){\n\t\tlet isValid = true;\n\n\t\tif(!this.$customSkin){\n\t\t\tconsole.error(`Skin element associated with ID:${this.ID} can't be found. Add me:skin:id=\"${this.ID}\"`);\n\t\t\tisValid = false;\n\t\t}\n\n\t\tif(!this.ID){\n\t\t\tconsole.error(`ID attribute must be defined on the native field`);\n\t\t\tisValid = false;\n\t\t}\n\n\t\treturn isValid;\n\t}\n\n\ttoggleHover(e){\n\t\tif (this.$field.attr('disabled')) {return;}\n\t\tthis.$customSkin.toggleClass('hover');\n\t}\n\n\tget name(){\n\t\treturn this._name;\n\t}\n\n\tset name(name){\n\t\tif(typeof name !== \"string\"){\n\t\t\tconsole.error('The name parameter must be a string');\n\t\t\treturn;\n\t\t}\n\n\t\tif(name){\n\t\t\tthis._name = name;\n\t\t}\n\t}\n\n\tget type(){\n\t\treturn this._type;\n\t}\n\n\tset type(type){\n\t\tif(typeof type !== \"string\"){\n\t\t\tconsole.error('The type parameter must be a string');\n\t\t\treturn;\n\t\t}\n\n\t\tif(type){\n\t\t\tthis._type = type;\n\t\t}\n\t}\n\n\tget ID(){\n\t\treturn this._ID;\n\t}\n\n\tset ID(ID){\n\t\tif(typeof ID !== \"string\"){\n\t\t\tconsole.error('The ID parameter must be a string');\n\t\t\treturn;\n\t\t}\n\n\t\tif(ID){\n\t\t\tthis._ID = ID;\n\t\t}\n\t}\n\n\tget options(){\n\t\treturn this._options;\n\t}\n\n\tset options(params){\n\t\tthis._options = params;\n\t}\n\n\tget disabled(){\n\t\treturn this._disabled;\n\t}\n\n\tset disabled(bool){\n\t\tif(typeof bool !== \"boolean\"){\n\t\t\tconsole.error('The bool parameter must be a boolean');\n\t\t\treturn;\n\t\t}\n\n\t\tthis.$field.attr('disabled', bool);\n\t\tthis._disabled = bool;\n\n\t\tif(this.$customSkin){\n\t\t\tthis.$customSkin.attr('me:skin:disabled', bool);\n\n\t\t\tif(bool === true){\n\t\t\t\tthis.$customSkin.attr('tabindex', -1);\n\t\t\t} else{\n\t\t\t\tthis.$customSkin.attr('tabindex', 0);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Those functions need to be overwrite by each type of field\n\tsetCustomVariables(){}\n\taddCustomEvents(){}\n\tremoveCustomEvents(){}\n\tsetDefault(){}\n\tkeyHandler(e){}\n}"],"sourceRoot":"../src"}