.skinMe.activated {
	&.radio {
		input[type="radio"] {
			display:none;
		}
	}
	&.checkbox {
		input[type="checkbox"] {
			display:none;
		}
	}
	&.select {
		select {
			filter: ~"alpha(opacity=1)";
			-khtml-opacity:0.01;
			-moz-opacity:0.01;
			opacity:0.01;
		}
	}
}

.skinMe-select (@class) {
	&.skinMe {
		.skinme-select-ctn {
			position:relative;
			display:inline-block;

			.select.@{class} {
				cursor:pointer;
				position:absolute;
				top:0;
				bottom:0;
				left:0;
				right:0;
				z-index:5;

				.skinme-mask {
					position:absolute;
					top:0;
					bottom:0;
					left:0;
					right:0;
					z-index:10;
					background-color:#ffffff;
					filter: ~"alpha(opacity=1)";
					-khtml-opacity:0.01;
					-moz-opacity:0.01;
					opacity:0.01;
				}

				.active-choice {
					position:absolute;
					top:0;
					bottom:0;
					left:0;
					right:0;
					z-index:5;
					-moz-box-sizing:border-box;
					-webkit-box-sizing:border-box;
					box-sizing:border-box;
					overflow:hidden;
				}

				.skinme-select-choices {
					display:none;
				}
			}

			select {
				cursor:pointer;
				position:relative;
				z-index:1;

				&.native {
					z-index:10;
				}
			}
		}
	}
}


.skinMe-radio (@width, @height, @frames, @direction, @class, @url, @urlError:'', @retina:false, @retinaUrl:'', @retinaUrlError:'', @forceRetina:false) {
	&.skinMe {
		.radio.@{class} {
			cursor:pointer;
			width: @width * 1px;
			height: @height * 1px;
			background-position: 0 0;

			.fretina() when (@forceRetina = false) {
				background-image: url(@url);

				&.error {
					background-image: url(@urlError);
				}
			}
			.fretina() when (@forceRetina = true) {
					background-image: url(@retinaUrl);
					background-size:100% auto;

					&.error {
						background-image: url(@retinaUrlError);
					}
			}
			.fretina();

			.frame-2() when (@frames = 2){
				&.active {
					.top() when (@direction = top) {
						background-position:0 -@height * 1px;
					}
					.top();
					.left() when (@direction = left) {
						background-position:-@height * 1px 0;
					}
					.left();
				}
			}
			.frame-4() when (@frames = 4){
				&.hover {
					.top() when (@direction = top) {
						background-position:0 -@height * 1px;
					}
					.top();
					.left() when (@direction = left) {
						background-position:-@height * 1px 0;
					}
					.left();
				}

				&.active {
					.top() when (@direction = top) {
						background-position:0 -@height * 2px;
					}
					.top();
					.left() when (@direction = left) {
						background-position:-@height * 2px 0;
					}
					.left();
					&.hover {
						.top() when (@direction = top) {
							background-position:0 -@height * 3px;
						}
						.top();
						.left() when (@direction = left) {
							background-position:-@height * 3px 0;
						}
						.left();
					}
				}
			}

			.retina() when (@retina = true) {
				.fretina() when (@forceRetina = false) {
					@media (-webkit-min-device-pixel-ratio: 1.75), (min-resolution: 168dpi) {
						background-image: url(@retinaUrl);
						background-size:100% auto;

						&.error {
							background-image: url(@retinaUrlError);
						}
					}
				}
				.fretina();
			}

			.frame-2();
			.frame-4();
			.retina();
		}
	}
}

.skinMe-checkbox (@width, @height, @frames, @direction, @class, @url, @urlError:'', @retina:false, @retinaUrl:'', @retinaUrlError:'', @forceRetina:false) {
	&.skinMe {
		.checkbox.@{class} {
			cursor:pointer;
			width: @width * 1px;
			height: @height * 1px;
			background-position: 0 0;

			.fretina() when (@forceRetina = false) {
				background-image: url(@url);

				&.error {
					background-image: url(@urlError);
				}
			}
			.fretina() when (@forceRetina = true) {
				background-image: url(@retinaUrl);
				background-size:100% auto;

				&.error {
					background-image: url(@retinaUrlError);
				}

			}
			.fretina();

			.frame-2() when (@frames = 2){
				&.active {
					.top() when (@direction = top) {
						background-position:0 -@height * 1px;
					}
					.top();
					.left() when (@direction = left) {
						background-position:-@height * 1px 0;
					}
					.left();
				}
			}
			.frame-4() when (@frames = 4){
				&.hover {
					.top() when (@direction = top) {
						background-position:0 -@height * 1px;
					}
					.top();
					.left() when (@direction = left) {
						background-position:-@height * 1px 0;
					}
					.left();
				}

				&.active {
					.top() when (@direction = top) {
						background-position:0 -@height * 2px;
					}
					.top();
					.left() when (@direction = left) {
						background-position:-@height * 2px 0;
					}
					.left();
					&.hover {
						.top() when (@direction = top) {
							background-position:0 -@height * 3px;
						}
						.top();
						.left() when (@direction = left) {
							background-position:-@height * 3px 0;
						}
						.left();
					}
				}
			}

			.retina() when (@retina = true) {
				.fretina() when (@forceRetina = false) {
					@media (-webkit-min-device-pixel-ratio: 1.75), (min-resolution: 168dpi) {
						background-image: url(@retinaUrl);
						background-size:100% auto;

						&.error {
							background-image: url(@retinaUrlError);
						}

					}
				}
				.fretina();
			}

			.frame-2();
			.frame-4();
			.retina();
		}
	}
}