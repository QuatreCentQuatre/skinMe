@mixin skinMe-select ($height, $class, $icon, $iconW, $iconH, $retina:false, $retinaIcon:'', $forceRetina:false) {
	&.skinMe {
		.skinme-select-ctn {
			position:relative;
			height: $height * 1px;

			.select.#{$class} {
				cursor:pointer;
				position:absolute;
				left: 0;
				top: 0;
				width: 100%;
				height: $height * 1px;
				border: 1px solid;
				box-sizing: border-box;

				// To customize for default
				background: #ffffff;
				color: #333333;
				border-color: #d3d8d8;
				// To customize for default

				.toggler {
					position: absolute;
					top: 0;
					right: 0;

					width: $height * 1px;
					height: 100%;

					@if($forceRetina) {
						background-image: url($retinaIcon);
						background-size: ($iconW * 0.5px) ($iconH * 0.5px);
					} @else {
						background-image: url($icon);
						background-size: $iconW $iconH;
					}

					background-repeat: no-repeat;
					background-position:center;
				}

				.skinme-mask {
					position: absolute;
					width: 100%;
					height: 100%;

					z-index:10;
					background-color:#ffffff;
					filter: "alpha(opacity=1)";
					-khtml-opacity:0.01;
					-moz-opacity:0.01;
					opacity:0.01;
				}

				&.opened{
					.toggler{
						-webkit-transform: rotate(180deg);
						-moz-transform: rotate(180deg);
						-ms-transform: rotate(180deg);
						-o-transform: rotate(180deg);
						transform: rotate(180deg);
					}

					.active-choice{
						border-bottom: none;
						border-bottom-right-radius: 0;
						border-bottom-left-radius: 0;
					}
				}

				.active-choice {
					position:absolute;
					height: $height;
					top:0;
					left:0;
					z-index:5;
					-moz-box-sizing:border-box;
					-webkit-box-sizing:border-box;
					box-sizing:border-box;
					overflow:hidden;

					padding-left: 15px;
					padding-right: $height * 1px;
				}

				.skinme-select-choices {
					display:none;

					position: relative;
					top: 100%;
					margin-top: 1px;
					border: 1px solid;
					z-index: 9999;
					overflow: hidden;
					border-radius: 0 0 25px 25px;

					// To customize for default
					background-color: #ffffff;
					border-color: #ececec;
					// To customize for default

					&.open {
						display: block;
					}

					.choice{
						box-sizing: border-box;
						position: relative;
						padding: 5px 15px;
						clear: both;
						cursor: pointer;
						text-align: left;

						&.default {
							display: none;
						}

						&.selected, &:hover{
							// To customize for default
							color: #333333;
							background-color: #d3d8d8;
							// To customize for default
						}
					}
				}

				&:hover {
					// To customize for default
					background-color: #d3d8d8;
					// To customize for default
				}
			}

			select {
				cursor:pointer;
				position:relative;
				z-index:1;

				&.native {
					z-index:10;
				}
			}
		}
	}
}


@mixin skinMe-radio ($width, $height, $frames, $direction, $class, $url, $urlError:'', $retina:false, $retinaUrl:'', $retinaUrlError:'', $forceRetina:false) {
	&.skinMe {
		.radio.#{$class} {
			cursor:pointer;
			width: $width * 1px;
			height: $height * 1px;
			background-position: 0 0;

			@if($forceRetina) {
				background-image: url($retinaUrl);

				&.error {
					background-image: url($retinaUrlError);
				}

				@if($direction == "top") {
					background-size:auto 100% * $frames;
				}
				@if($direction == "left") {
					background-size:100% * $frames auto;
				}
			} @else {
				background-image: url($url);

				&.error {
					background-image: url($urlError);
				}
			}

			@if($frames == 2) {
				&.active {
					@if($direction == top) {
						background-position:0 (-$height * 1px);
					}
					@if($direction == left) {
						background-position:(-$height * 1px) 0;
					}
				}
			}
			@if($frames == 4){
				&.hover {
					@if($direction == top) {
						background-position:0 (-$height * 1px);
					}
					@if($direction == left) {
						background-position:(-$height * 1px) 0;
					}
				}

				&.active {
					@if($direction == top) {
						background-position:0 (-$height * 2px);
					}
					@if($direction == left) {
						background-position:(-$height * 2px) 0;
					}
					&.hover {
						@if($direction == top) {
							background-position:0 (-$height * 3px);
						}
						@if($direction == left) {
							background-position:(-$height * 3px) 0;
						}
					}
				}
			}

			@if($retina == true) {
				@if($forceRetina == false) {
					@media (-webkit-min-device-pixel-ratio: 1.75), (min-resolution: 168dpi) {
						background-image: url($retinaUrl);

						&.error {
							background-image: url($retinaUrlError);
						}
						@if($direction == top) {
							background-size:auto 100% * $frames;
						}
						@if($direction == left) {
							background-size:100% * $frames auto;
						}
					}
				}
			}
		}
	}
}

@mixin skinMe-checkbox ($width, $height, $frames, $direction, $class, $url, $urlError:'', $retina:false, $retinaUrl:'', $retinaUrlError:'', $forceRetina:false) {
	&.skinMe {
		.checkbox.#{$class} {
			cursor:pointer;
			width: $width * 1px;
			height: $height * 1px;
			background-position: 0 0;

			@if($forceRetina == false) {
				background-image: url($url);

				&.error {
					background-image: url($urlError);
				}
			}
			@if($forceRetina == true) {
				background-image: url($retinaUrl);

				&.error {
					background-image: url($retinaUrlError);
				}

				@if($direction == top) {
					background-size:auto 100% * $frames;
				}
				@if($direction == left) {
					background-size:100% * $frames auto;
				}
			}

			@if($frames == 2) {
				&.active {
					@if($direction == top) {
						background-position:0 ($height * -1px);
					}
					@if($direction == left) {
						background-position:($height * -1px) 0;
					}
				}
			}
			@if($frames == 4){
				&.hover {
					@if($direction == top) {
						background-position:0 ($height * -1px);
					}
					@if($direction == left) {
						background-position:($height * -1px) 0;
					}
				}

				&.active {
					@if($direction == top) {
						background-position:0 ($height * -2px);
					}
					@if($direction == left) {
						background-position:($height * -2px) 0;
					}
					&.hover {
						@if($direction == top) {
							background-position:0 ($height * -3px);
						}
						@if($direction == left) {
							background-position: ($height * -3px) 0;
						}
					}
				}
			}

			@if($retina == true) {
				@if($forceRetina == false) {
					@media (-webkit-min-device-pixel-ratio: 1.75), (min-resolution: 168dpi) {
						background-image: url($retinaUrl);

						&.error {
							background-image: url($retinaUrlError);
						}
						@if($direction == top) {
							background-size:auto 100% * $frames;
						}
						@if($direction == left) {
							background-size:100% * $frames auto;
						}
					}
				}
			}
		}
	}
}